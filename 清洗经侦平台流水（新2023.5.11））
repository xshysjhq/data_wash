import os
import pandas as pd
import shutil
import numpy as np
from tkinter import messagebox, filedialog
from tkinter import Tk

root = Tk()
root.withdraw()

# 弹出输入对话框
messagebox.showinfo("经侦平台数据清洗", "点确定选择要清洗的文件夹")

# 定义桌面和源文件夹
desktop_path = os.path.expanduser('~/Desktop')
path_output = desktop_path
folder_path = filedialog.askdirectory()
path_folder=os.path.basename(folder_path)
if not folder_path:
    messagebox.showerror("经侦平台数据清洗", "未选择文件夹")
    exit()


# 创建汇总文件的目录
def mkdir(input_path,input_str):
    path_join_result=input_path + "\\" + input_str
    isExists = os.path.exists(path_join_result)
    if not isExists:
        os.makedirs(path_join_result)
    else:
        print(path_join_result + '目录已存在')
    return path_join_result


# 定义表格名称关键字
business_keyword = '交易明细信息'
people_keyword = '人员信息'
account_keyword = '账户信息'
not_use_keyword = '子账户'
path_source = folder_path
# 创建文件目录
desktop_path = os.path.expanduser('~/Desktop')
path_output = desktop_path
business_path = mkdir(path_output, business_keyword)
people_path = mkdir(path_output, people_keyword)
account_path = mkdir(path_output, account_keyword)


def addcsv(path_origin, path_goal, keyword, keyword2):
    df = []
    df2 = []
    df_concat = []

    file_list = os.listdir(path_origin)
    for i in file_list:
        if keyword in i:
            if not keyword2 in i:
                df = pd.read_csv(path_origin + '\\' + i, encoding='gb18030', dtype=object)
                df.to_excel(path_goal + '\\' + i + '.xlsx', index=None)

    filenames = os.listdir(path_goal)
    index = 0
    for name in filenames:
        df2.append(pd.read_excel(os.path.join(path_goal, name), dtype=object))
        index = +1
    df_concat = pd.concat(df2)
    df_concat.to_excel(path_goal + '\\' + keyword + '汇总.xlsx', index=None)


addcsv(path_source, business_path, business_keyword, not_use_keyword)
addcsv(path_source, people_path, people_keyword, not_use_keyword)
addcsv(path_source, account_path, account_keyword, not_use_keyword)

df_business = pd.read_excel(business_path + '\\' + business_keyword + '汇总.xlsx', dtype=object)  # 读取交易流水
df_account = pd.read_excel(account_path + '\\' + account_keyword + '汇总.xlsx', dtype=object)  # 读取账户信息
df_people = pd.read_excel(people_path + '\\' + people_keyword + '汇总.xlsx', dtype=object)

df_account.rename(str.strip, axis='columns', inplace=True)
df_business.rename(str.strip, axis='columns', inplace=True)
df_people.rename(str.strip, axis='columns', inplace=True)


# 定义一个函数，用于删除字符串前后的空格
def strip_whitespace(x):
    if isinstance(x, str):
        return x.strip()
    else:
        return x


# 将 DataFrame 中的每个单元格应用 strip_whitespace 函数

df_business = df_business.applymap(strip_whitespace)
df_account = df_account.applymap(strip_whitespace)
df_people = df_people.applymap(strip_whitespace)

# 删除空行
df_business.drop("查询反馈结果原因", axis=1, inplace=True)
df_business.replace('', np.nan, inplace=True)
df_business = df_business.dropna(how='all')
df_account = df_account.dropna(how='all')
df_business['交易账号'].fillna(df_business['交易卡号'], inplace=True)

df_account_split = df_account.copy()
# 删除某一列中字符串的 _ 之后的部分
df_account_split['交易账号'] = df_account_split['交易账号'].str.split('_').str[0]
df_compare = pd.merge(left=df_business, right=df_account_split, how='left', on='交易卡号')
df_compare['交易方户名'] = df_compare['账户开户名称']
df_compare['交易方证件号码'] = df_compare['开户人证件号码']
df_compare.insert(0, '开户银行', df_compare['账号开户银行'])
df_compare_minus = df_compare.iloc[:, 0:29]
df_compare_minus.rename(columns={'交易账号_x': '交易账号', '备注_x': '备注'}, inplace=True)

df_compare_minus_null = df_compare_minus[df_compare_minus['交易方户名'].isnull()]
df_compare_minus_notnull = df_compare_minus[df_compare_minus['交易方户名'].notnull()]
df_mid = pd.merge(left=df_compare_minus_null, right=df_account_split, how='left', on='交易账号')
df_mid['交易方户名'] = df_mid['账户开户名称']
df_mid['交易方证件号码'] = df_mid['开户人证件号码']
df_mid['开户银行'] = df_mid['账号开户银行']
df_mid_minus = df_mid.iloc[:, 0:29]
df_mid_minus.rename(columns={'交易卡号_x': '交易卡号', '备注_x': '备注'}, inplace=True)
df_end = pd.concat([df_mid_minus, df_compare_minus_notnull])
df_end_drop1 = df_end.drop_duplicates()
df_end_drop2 = df_end_drop1[~(df_end_drop1['交易金额'].isin(['0.00']))]
df_end_drop2 = df_end_drop2.dropna(subset=['交易时间'])
df_end_drop2.to_excel(desktop_path + '\\' + path_folder + '-交易流水.xlsx', index=None)
df_account_split.to_excel(desktop_path + '\\' + path_folder + '-账户信息.xlsx', index=None)
df_people.to_excel(desktop_path+ '\\' +path_folder+'-人员信息.xlsx',index=None)

def rmtr(folder_path):
    if os.path.exists(folder_path) and os.path.isdir(folder_path):
        shutil.rmtree(folder_path)


rmtr(business_path)
rmtr(people_path)
rmtr(account_path)

messagebox.showinfo("经侦平台数据清洗", "已完成！")
